test_metadata:
  type: config
  name: custom-ecs-observer
  description: custom custom ecs-observer config test


aot_config_content:
  extensions:
    ecs_observer:
      refresh_interval: 20s # format is https://golang.org/pkg/time/#ParseDuration
      cluster_name: '${EnvironmentName}-services' # cluster name need manual config
      cluster_region: '${AWS::Region}' # region can be configured directly or use AWS_REGION env var
      result_file: '/etc/ecs_sd_targets.yaml' # the directory for file must already exists
          
  receivers:
    prometheus:
      config:
        scrape_configs:
          - job_name: "custom-ecssd"
            file_sd_configs:
              - files:
                  - '/etc/ecs_sd_targets.yaml'
            relabel_configs:
              - source_labels: [ __meta_ecs_cluster_name ] # ClusterName
                action: replace
                target_label: ClusterName
              - source_labels: [ __meta_ecs_service_name ] # ServiceName
                action: replace
                target_label: ServiceName
              - source_labels: [ __meta_ecs_task_definition_family ] # TaskDefinitionFamily
                action: replace
                target_label: TaskDefinitionFamily
              - source_labels: [ __meta_ecs_container_name ] # container_name
                action: replace
                target_label: container_name
              - action: labelmap # docker labels
                regex: ^__meta_ecs_container_labels_(.+)$
                replacement: '$$1'

  processors:
    batch: {}

  exporters:
    awsprometheusremotewrite:
      endpoint: ${APSWorkspace.PrometheusEndpoint}api/v1/remote_write
      aws_auth:
        region: ${AWS::Region}
        service: "aps"
    logging:
      loglevel: error

      
  service:
    extensions: [ ecs_observer ]
    pipelines:
      metrics:
        receivers: [prometheus]
        processors: [ batch ]
        exporters: [awsprometheusremotewrite]
